#################
#      BASE     #
#################
FROM node:20.0-alpine as base

LABEL org.opencontainers.image.source="https://github.com/dotabod/backend"
LABEL org.opencontainers.image.description="Dota backend service"
LABEL org.opencontainers.image.licenses="AGPL-3.0"

ARG BUILD_CONTEXT

RUN apk add --no-cache git g++ make py3-pip

WORKDIR /app/$BUILD_CONTEXT
COPY ./$BUILD_CONTEXT/package.json ./$BUILD_CONTEXT/yarn.lock* ./

WORKDIR /app/packages/settings
COPY ./packages/settings/package.json ./packages/settings/yarn.lock* ./

WORKDIR /app/packages/prisma
COPY ./packages/prisma/package.json ./packages/prisma/yarn.lock* ./

WORKDIR /app
COPY package.json yarn.lock* ./

RUN yarn install --pure-lockfile --non-interactive

##################
#     BUILDER    #
##################
FROM base AS builder

WORKDIR /app
COPY tsconfig.json ./

WORKDIR /app/packages/settings
COPY ./packages/settings/tsconfig.json ./
COPY ./packages/settings/src ./src
RUN yarn build

WORKDIR /app/packages/prisma
COPY ./packages/prisma/src ./src
RUN yarn build

WORKDIR /app/$BUILD_CONTEXT
COPY ./$BUILD_CONTEXT/tsconfig.json ./
COPY ./$BUILD_CONTEXT/src ./src

# Run 'yarn build' only in production environment
ARG NODE_ENV
RUN echo "NODE_ENV is $NODE_ENV"

CMD [ "sh", "-c", "if [ \"$NODE_ENV\" = 'development' ]; then echo 'Dev no build!'; else yarn build; fi" ]

#################
#     PROD      #
#################
FROM node:20.0-alpine

ARG BUILD_CONTEXT

WORKDIR /app
COPY --from=base /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./
COPY --from=builder /app/tsconfig.json ./

WORKDIR /app/packages/settings
COPY --from=base /app/packages/settings/node_modules* ./node_modules
COPY --from=builder /app/packages/settings/dist ./dist
COPY --from=builder /app/packages/settings/package.json ./
COPY --from=builder /app/packages/settings/tsconfig.json ./

WORKDIR /app/packages/prisma
COPY --from=base /app/packages/prisma/node_modules* ./node_modules
COPY --from=builder /app/packages/prisma/dist ./dist
COPY --from=builder /app/packages/prisma/package.json ./

WORKDIR /app/$BUILD_CONTEXT
COPY --from=base /app/$BUILD_CONTEXT/node_modules* ./node_modules
COPY --from=builder /app/$BUILD_CONTEXT/dist* ./dist
COPY --from=builder /app/$BUILD_CONTEXT/package.json ./
COPY --from=builder /app/$BUILD_CONTEXT/tsconfig.json ./
RUN mkdir -p ./src/steam/volumes

ARG NODE_ENV
RUN echo "NODE_ENV is $NODE_ENV"

CMD [ "yarn", "dev-docker" ]
